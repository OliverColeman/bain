plugins {
    id "com.jfrog.bintray" version "1.4"
}

apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.7

// Determine version from last git tag.
def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

group = "org.ojcoleman.bain"
version = getVersionName()

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { 
    	url "http://mvnrepository.com"
    }
}


dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.jfree:jfreechart:1.0.19'
    compile 'org.swinglabs.swingx:swingx-all:1.6.4'
    compile fileTree(dir: 'lib', include: 'aparapi.jar')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


// Default jar file for "assemble" task.
jar {
    manifest {
        attributes 'Main-Class': 'com.ojcoleman.bain.gui.STDPTestGUIApp'
    }
}

// Assemble task that includes all dependencies (makes a "fat" jar")
task withDeps(type: Jar) {
	manifest.from jar.manifest
	baseName = project.name + '-all'
	from {
	    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
	}
	with jar
}


task createPom << {
    pom {
        project {
            groupId 'com.ojcoleman'
            artifactId 'bain'
            version getVersionName()

            inceptionYear '2015'
            licenses {
                license {
                    name 'GNU General Public License, Version 3.0'
                    url 'http://www.gnu.org/licenses/gpl.txt'
                }
            }
        }
    }.writeTo("pom.xml")
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = 'bain'
        desc = "Neural network simulator."
        websiteUrl = "http://olivercoleman.github.io/bain"
        issueTrackerUrl = "https://github.com/OliverColeman/bain/issues"
        vcsUrl = 'https://github.com/OliverColeman/bain.git'
        licenses = ['GPL-3.0']
        version {
                name = getVersionName()
                //desc = 'Initial release'
                released  = new Date()
                vcsTag = getVersionName()
        }
    }
    configurations = ['archives']
}

